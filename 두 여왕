""" 
이 문제는 n*n 체스 배열에서 2명의 여왕을 배치하는 문제이다. 

나는 이 문제에 단순하게 접근하였다. 
백트래킹 등의 고급 알고리즘을 사용할 수도 있겠지만, 이 문제에서는 오히려 번거로워진다. 
왜냐하면 여왕이 2명 뿐이기 때문이다. 
따라서 단순히 2명의 여왕이 선택할 수 있는 모든 자리를 비교하기로 했다. 

product 연산을 통해 두 여왕의 좌표를 저장하였다. 
O(n**2)의 시간복잡도가 소요되었다. 

이후 모든 여왕의 좌표들에 대해 비교를 해주었다. 
1번 여왕이 먼저 자리를 잡고, 2번 여왕의 좌표가 유망한지 체크해주었다. 

좌표가 유망한지 체크하는 방법은 다음과 같다. 
  1.x 혹은 y 값이 겹치는지 체크해준다.-> 겹친다면 공격범위이니, 유망하지 않은 것이다. 
  2.각 좌표의 x값의 차, y값의 차가 같은지 체크해준다.-> 같다면 대각선에 걸려 공격을 당할 수 있으니, 유망하지 않은것이다. 
만약 좌표가 유망하다면 cnt를 1 증가시켜준다. 
이 과정은 O(n**4)의 시간복잡도가 소요된다. 

마지막으로 cnt를 둘로 나누어 출력하였다. 
나누기를 하는 이유는 문제의 특성때문이다. 
나는 두 여왕에 1번여왕, 2번여왕과 같이 이름을 붙였다. 
하지만 문제는 두 여왕을 구분하지 않는다. 
처음부터 두 여왕을 구분하지 않고 풀 수도 있겠지만, 그렇게 해면 자기자신을 배제하는 과정이 필요하다. 
즉, 번거로워진다. 
따라서 두 여왕을 분리하고, 마지막에 2로 나누어주는 풀이를 생각하였다. 

총 수행시간은 O(n**4)이다. 
""" 

from itertools import product 

n=int(input()) 

Queen1=list(product(range(n),repeat=2)) 
Queen2=list(product(range(n),repeat=2)) 

cnt=0 
for q1 in Queen1: 
  for q2 in Queen2: 
    if q1[0]!=q2[0] and q1[1]!=q2[1] and abs(q1[0]-q2[0])!=abs(q1[1]-q2[1]): 
      cnt+=1 
print(cnt//2)
